<Application x:Class="The_Logica.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:The_Logica"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="Back" Color="#FF53B2A5"/>
        <SolidColorBrush x:Key="Black" Color="#FF333333"/>
        <SolidColorBrush x:Key="Yellow" Color="#FFFFDE6F"/>
        <SolidColorBrush x:Key="Yellow1" Color="#FFE8C31E"/>
        <SolidColorBrush x:Key="RedAccent" Color="#FFF35858"/>

        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFFF73A8"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFF35858"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="15, 15, 15, 0" />
            <Setter Property="FontSize" Value="38" />
            <Setter Property="Background" Value="#FFF35858" />
            <Setter Property="Padding" Value="20, 15" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="8">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Yellow1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="CellStyle" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Yellow}" />
            <Setter Property="Padding" Value="20, 7" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="CornerRadius" Value="3" />
        </Style>
        <Style x:Key="FrameCellStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{DynamicResource RedAccent}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="CornerRadius" Value="10" />
        </Style>
        <Style x:Key="FrameAnswerStyle" TargetType="Border" BasedOn="{StaticResource FrameCellStyle}">
            <Setter Property="Margin" Value="10, 5"/>
        </Style>
   

        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="IsChecked" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="checkBoxBorder" Background="Transparent" BorderThickness="2" BorderBrush="{DynamicResource RedAccent}" CornerRadius="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{DynamicResource RedAccent}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{DynamicResource RedAccent}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
